name: Publish for docker

on:
  push:
    tags:
      - '*'

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get git tag
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo "The current Git tag is $tag"
          echo $tag > /tmp/tag
      - name: Upload tag
        uses: actions/upload-artifact@v4
        with:
          name: tag
          path: /tmp/tag


  build:
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          build-scan-publish: true
          build-scan-term-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Run build
        run: ./gradlew build

      - name: Upload JAR file
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: build/libs/application.jar

  publish_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}

      - name: Checkout project sources
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download tag
        uses: actions/download-artifact@v3
        with:
          name: tag
          path: /tmp

      - name: Get tag from file
        id: get-tag
        run: |
          tag=$(cat /tmp/tag)
          echo "The current Git tag is $tag"
          echo "::set-output name=tag::$tag"

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: application-jar
          path: build/libs


      - name: build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: jaracogmbh/echoserve:${{ steps.get-tag.outputs.tag }}
